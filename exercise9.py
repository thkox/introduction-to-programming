# Στατιστικά χαρακτήρων ενός κειμένου
file = open("two_cities.txt", "r" ,encoding='utf-8')  # Άνοιγμα του αρχείου.
text = file.read()  # Αποθήκευση του αρχείου σε μια συμβολοσειρά με όλους τους χαρακτήρες.
file.close()  # Κλείσιμο του αρχείου.

list_text = list(text)   # Μετατροπή τηε συμβολοσειράς text σε μια λίστα.
i = 0                    # μετρητης για να διατρέξουμε τη λίστα list_text
sum = 0                  # μετραμε το πληθος εμφανισεων των χαρακτηρων με μονο αριθμο ASCII
mylist = []              # Δημιουργία Λίστας  mylist ¨οπου θα συγκεντρωθούν όλοι οι μονοί αλφαβητικοί χαρακτήρες

while i < len(list_text):
     letter=list_text[i]      # παιρνει το χαρακτήρα από τη λίστα
     n=ord(letter)            # τον μετατρέπει σε ASCII
     if n % 2 == 1:           # ελέγχει αν είναι περιττός
          if (n <91 and n>64) or (n <123 and n>96):    # αν ειναι περιττός ελέγχει αν είναι αλφαβητικός
               mylist.append (letter)                  # αφού είναι τον προσθέτει στη λίστα mylist
               sum = sum + 1                           # αθροίζει ότι βρήκε ακόμη ένα
     i = i + 1                                         # Αυξάνει τη μεταβλητή κατα 1 και επιστρέφει στη while

print("Στο αρχείο εμφανίζονται ", sum, " μονοι χαρακτηρες ASCII")

from collections import Counter
m = Counter(mylist)
n = len(sorted(m))
p = dict(sorted(m.items(), key = lambda item: item[1]))
#-----------------------
x = list(p.keys())                      # δημιουργεί λίστα από τα κελιδιά του λεξικού
x.sort()                                # ταξινομεί τη λίστα
#-----------------------
for symbol in x:                        # για κάθε χαρακτήρα της ταξ. λίστας (κλειδι του λεξικού)
     number = p[symbol]                 # τοποθετεί το πλήθος εμφανίσεως του στη μεταβλητή number
     print(symbol, ": ",  end="")       # τυπώνει τον αλφαβητικό χαρακτήρα του κειμένου

     xy = round((number*100/sum),0)     # κάνει στρογγυλοποίηση 5,32-> 5 και 5,51->6

     print("*"*int(xy))                 # τυπώνει το πλήθος των * ανα αλφαβητικό χαρακτήρα του κειμένου
                                        # σημειώνουμε ότι είχαμε κάνει στρογγυλοποίηση προς
                                        # τα πάνω για κάθε εμφάνιση γράμματος αλλά ξεφευγαμε αρκετά πάνω από το 100
                                        # κάνοντας χρήση του κειμένου two_cities.txt το αποτέλεσμα είναι
                                        # πιο σωστό στατιστικα, καθότι τα γράμματα που εμφανίζονται και δεν έχουν *
                                        # εμφανίζονται με % < 1%. Σε μικρότερο κείμενο υπάρχουν γράμματα
                                        # που δεν εμφανίζονται και καθόλου (κυρίως Κεφαλαία)
